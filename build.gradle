
buildscript {
    repositories {
        jcenter()
        maven { url 'http://repo.enonic.com/public' }
    }

    dependencies {
        classpath "com.enonic.xp:gradle-plugin:${xpVersion}"
        classpath 'com.moowork.gradle:gradle-gulp-plugin:0.11'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.enonic.xp.app'
apply plugin: 'com.moowork.gulp'
apply plugin: 'com.jfrog.bintray'

app {
    name = project.appName
    displayName = project.displayName
    vendorName = 'Iskald'
    vendorUrl = 'http://iskald.no'
}

dependencies {
    compile "com.enonic.xp:core-api:${xpVersion}"
    compile "com.enonic.xp:portal-api:${xpVersion}"
    compile "com.enonic.xp:lib-content:${xpVersion}"
    compile "com.enonic.xp:lib-portal:${xpVersion}"
    compile "com.enonic.xp:lib-thymeleaf:${xpVersion}"
    compile "com.enonic.xp:lib-xslt:${xpVersion}"
    compile "com.enonic.xp:lib-auth:${xpVersion}"
    compile "com.enonic.xp:lib-context:${xpVersion}"
    compile "com.enonic.xp:lib-i18n:${xpVersion}"
    compile "com.stripe:stripe-java:2.5.0"
}

repositories {
    jcenter()
    maven {
        url 'http://repo.enonic.com/public'
    }
}

// Frontend build setup
node {
    version = '5.11.0'
    download = true
}

gulp {
    // Set the directory where gulpfile.js should be found
    workDir = file("${project.projectDir}")

    // Whether colors should output on the terminal
    colors = true
}

// processes your package.json before running gulp build
gulp_build.dependsOn 'npmInstall'

// runs "gulp build" as part of your gradle build
build.dependsOn gulp_build
build.mustRunAfter gulp_build

publishing {
    publications {
        mavenJava( MavenPublication ) {
            from components.java
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['mavenJava']

    pkg {
        repo = 'maven'
        name = 'payup'
        desc = 'A simple e-commerce store for Enonic XP.'
        websiteUrl = 'https://github.com/ljl/payup'
        issueTrackerUrl = 'https://github.com/ljl/payup/issues'
        vcsUrl = 'https://github.com/ljl/payup.git'
        licenses = ['Apache-2.0']
        labels = ['java', 'enonic', 'javascript']
        publicDownloadNumbers = true

        version {
            vcsTag = "v$project.version"
        }
    }
}

task createPom << {
    pom {
        project {
            groupId project.group
            artifactId 'payup'
            version project.version
        }
    }.writeTo("build/libs/pom.xml")
}
